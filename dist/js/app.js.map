{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.js","src/js/app.js","src/js/collections/todos.js","src/js/filters/todo.js","src/js/helpers/utils.js","src/js/models/todo.js","src/js/routers/router.js","src/js/views/app.js","src/js/views/todos.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_app","_app2","_router","$","./routers/router","./views/app","2","Object","defineProperty","value","_todo","_todo2","collection","Backbone","Collection","extend","model","localStorage","LocalStorage","completed","this","filter","todo","get","remaining","without","apply","nextOrder","last","comparator","Todos","./../models/todo","3","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","TodoFilter","4","isEnterKey","ENTER_KEY","5","Model","defaults","title","toggle","save","6","_todos","_todos2","Workspace","Router","routes","*filter","setFilter","param","console","log","set","trigger","TodoRouter","history","start","./../collections/todos","./../filters/todo","7","_utils","_todos3","_todos4","View","el","statsTemplate","_","template","html","events","keypress #new-todo","click #clear-completed","click #toggle-all","initialize","allCheckbox","$input","$footer","$main","listenTo","addOne","addAll","filterOne","filterAll","render","fetch","show","removeClass","addClass","hide","checked","view","append","each","newAttributes","val","trim","order","createOnEnter","event","which","create","clearCompleted","invoke","toggleAllComplete","./../helpers/utils","./todos","8","tagName","click .toggle","dblclick label","click .destroy","keypress .edit","blur .edit","remove","toggleVisible","$el","toJSON","toggleClass","isHidden","isCompleted","togglecompleted","edit","focus","close","clear","updateOnEnter","destroy"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _app = require('./views/app');\n\nvar _app2 = _interopRequireDefault(_app);\n\nvar _router = require('./routers/router');\n\nvar _router2 = _interopRequireDefault(_router);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n$(function () {\n  new _app2.default();\n});\n\n},{\"./routers/router\":6,\"./views/app\":7}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _todo = require('./../models/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar collection = Backbone.Collection.extend({\n  model: _todo2.default,\n  localStorage: new Backbone.LocalStorage('todos-backbone'),\n\n  // Фильтрация завершенных задач списка.\n  completed: function completed() {\n    return this.filter(function (todo) {\n      return todo.get('completed');\n    });\n  },\n\n  // Фильтрация незавершенных задач списка.\n  remaining: function remaining() {\n    return this.without.apply(this, this.completed());\n  },\n\n  nextOrder: function nextOrder() {\n    if (!this.length) {\n      return 1;\n    }\n    return this.last().get('order') + 1;\n  },\n\n  comparator: function comparator(todo) {\n    return todo.get('order');\n  }\n});\n\nvar Todos = new collection();\nexports.default = Todos; // (?)\n\n},{\"./../models/todo\":5}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TodoFilter = function () {\n  function TodoFilter() {\n    _classCallCheck(this, TodoFilter);\n\n    this.filter = '';\n  }\n\n  _createClass(TodoFilter, [{\n    key: 'set',\n    value: function set(filter) {\n      this.filter = filter;\n    }\n  }, {\n    key: 'get',\n    value: function get() {\n      return this.filter;\n    }\n  }]);\n\n  return TodoFilter;\n}();\n\nvar filter = new TodoFilter();\nexports.default = filter;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEnterKey = isEnterKey;\nvar ENTER_KEY = 13;\n\nfunction isEnterKey(code) {\n  if (code === ENTER_KEY) {\n    return true;\n  }\n  return false;\n}\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Backbone.Model.extend({\n  defaults: {\n    title: '',\n    completed: false\n  },\n  // переключение состояния задачи `completed`.\n  toggle: function toggle() {\n    this.save({\n      completed: !this.get('completed')\n    });\n  }\n});\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _todo = require('./../filters/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nvar _todos = require('./../collections/todos');\n\nvar _todos2 = _interopRequireDefault(_todos);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Workspace = Backbone.Router.extend({\n  routes: {\n    '*filter': 'setFilter'\n  },\n  setFilter: function setFilter(param) {\n\n    console.log('Set filter: ' + param);\n    _todo2.default.set(param || '');\n\n    // задание текущего фильтра\n    // генерация события filter коллекции, вызывающего\n    // скрытие/отображение задач\n    _todos2.default.trigger('filter');\n  }\n});\n\nvar TodoRouter = new Workspace();\nBackbone.history.start();\n\nexports.default = TodoRouter;\n\n},{\"./../collections/todos\":2,\"./../filters/todo\":3}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('./../helpers/utils');\n\nvar _todo = require('./../filters/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nvar _todos = require('./todos');\n\nvar _todos2 = _interopRequireDefault(_todos);\n\nvar _todos3 = require('./../collections/todos');\n\nvar _todos4 = _interopRequireDefault(_todos3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n  el: '#todoapp',\n  statsTemplate: _.template($('#stats-template').html()),\n  events: {\n    'keypress #new-todo': 'createOnEnter',\n    'click #clear-completed': 'clearCompleted',\n    'click #toggle-all': 'toggleAllComplete'\n  },\n  // при инициализации мы делаем привязку к соответствующим \n  // событиям коллекции `Todos` при добавлении и изменении событий.\n  initialize: function initialize() {\n    this.allCheckbox = this.$('#toggle-all')[0];\n    this.$input = this.$('#new-todo');\n    this.$footer = this.$('#footer');\n    this.$main = this.$('#main');\n    this.listenTo(_todos4.default, 'add', this.addOne);\n    this.listenTo(_todos4.default, 'reset', this.addAll);\n    this.listenTo(_todos4.default, 'change:completed', this.filterOne);\n    this.listenTo(_todos4.default, 'filter', this.filterAll);\n    this.listenTo(_todos4.default, 'all', this.render);\n    _todos4.default.fetch();\n  },\n  render: function render() {\n    var completed = _todos4.default.completed().length;\n    var remaining = _todos4.default.remaining().length;\n    if (_todos4.default.length) {\n      this.$main.show();\n      this.$footer.show();\n      this.$footer.html(this.statsTemplate({\n        completed: completed,\n        remaining: remaining\n      }));\n\n      console.log('view render: ' + _todo2.default.get());\n\n      this.$('#filters li a').removeClass('selected').filter('[href=\"#/' + (_todo2.default.get() || '') + '\"]').addClass('selected');\n    } else {\n      this.$main.hide();\n      this.$footer.hide();\n    }\n    this.allCheckbox.checked = !remaining;\n  },\n\n  // Добавление в список единственной задачи путем создания\n  // представления для нее и добавления ее элемента в `<ul>`.\n  addOne: function addOne(todo) {\n    var view = new _todos2.default({ model: todo });\n    $('#todo-list').append(view.render().el);\n  },\n  // Одновременное добавление всех элементов в коллекцию Todos.\n  addAll: function addAll() {\n    this.$('#todo-list').html('');\n    _todos4.default.each(this.addOne, this);\n  },\n\n  filterOne: function filterOne(todo) {\n    todo.trigger('visible');\n  },\n  filterAll: function filterAll() {\n    _todos4.default.each(this.filterOne, this);\n  },\n\n  newAttributes: function newAttributes() {\n    return {\n      title: this.$input.val().trim(),\n      order: _todos4.default.nextOrder(),\n      completed: false\n    };\n  },\n\n  // Создание новой задачи и ее сохранение в локальном хранилище\n  createOnEnter: function createOnEnter(event) {\n    if (!(0, _utils.isEnterKey)(event.which) || !this.$input.val().trim()) {\n      return;\n    }\n    _todos4.default.create(this.newAttributes());\n    this.$input.val('');\n  },\n\n  // Удаление всех завершенных задач уничтожением их моделей.\n  clearCompleted: function clearCompleted() {\n    _.invoke(_todos4.default.completed(), 'destroy');\n    return false;\n  },\n\n  toggleAllComplete: function toggleAllComplete() {\n    var completed = this.allCheckbox.checked;\n    _todos4.default.each(function (todo) {\n      todo.save({\n        'completed': completed\n      });\n    });\n  }\n});\n\n},{\"./../collections/todos\":2,\"./../filters/todo\":3,\"./../helpers/utils\":4,\"./todos\":8}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = require('./../helpers/utils');\n\nvar _todo = require('./../filters/todo');\n\nvar _todo2 = _interopRequireDefault(_todo);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Backbone.View.extend({\n  tagName: 'li',\n  template: _.template($('#item-template').html()),\n  events: {\n    'click .toggle': 'togglecompleted',\n    'dblclick label': 'edit',\n    'click .destroy': 'clear',\n    'keypress .edit': 'updateOnEnter',\n    'blur .edit': 'close'\n  },\n  // представление TodoView прослушивает изменения своей модели\n  // и выполняет повторное отображение. Поскольку в этом приложении\n  // **Todo** и **TodoView** соотносятся как 1 к 1,\n  // для удобства мы устанавливаем прямую ссылку на модель.\n  initialize: function initialize() {\n    this.listenTo(this.model, 'change', this.render);\n    this.listenTo(this.model, 'destroy', this.remove);\n    this.listenTo(this.model, 'visible', this.toggleVisible);\n  },\n  // Повторно отображает заголовки задачи.\n  render: function render() {\n    this.$el.html(this.template(this.model.toJSON()));\n    this.$el.toggleClass('completed', this.model.get('completed'));\n    this.toggleVisible();\n    this.$input = this.$('.edit');\n    return this;\n  },\n\n  toggleVisible: function toggleVisible() {\n    this.$el.toggleClass('hidden', this.isHidden());\n  },\n  isHidden: function isHidden() {\n    console.log('Is hidden: ' + _todo2.default.get());\n    var isCompleted = this.model.get('completed');\n    return !isCompleted && _todo2.default.get() === 'completed' || isCompleted && _todo2.default.get() === 'active';\n  },\n  togglecompleted: function togglecompleted() {\n    this.model.toggle();\n  },\n\n  // Переключение этого представления в режим редактирования,\n  // отображение поля ввода.\n  edit: function edit() {\n    this.$el.addClass('editing');\n    this.$input.focus();\n  },\n  // Закрытие режима редактирования, сохранение изменений в задаче.\n  close: function close() {\n    var value = this.$input.val().trim();\n    if (value) {\n      this.model.save({ title: value });\n    } else {\n      this.clear();\n    }\n    this.$el.removeClass('editing');\n  },\n  // Если вы нажмете `enter`, то редактирование элемента завершится.\n  updateOnEnter: function updateOnEnter(e) {\n    if ((0, _utils.isEnterKey)(e.which)) {\n      this.close();\n    }\n  },\n  clear: function clear() {\n    this.model.destroy();\n  }\n});\n\n},{\"./../filters/todo\":3,\"./../helpers/utils\":4}]},{},[1])\n\n","import AppView from './views/app';\r\nimport TodoRouter from './routers/router';\r\n\r\n$(() => {\r\n  new AppView();\r\n}); ","import Todo from './../models/todo';\r\n\r\nconst collection = Backbone.Collection.extend({\r\n  model: Todo,\r\n  localStorage: new Backbone.LocalStorage('todos-backbone'),\r\n\r\n  // Фильтрация завершенных задач списка.\r\n  completed: function() {\r\n    return this.filter(function( todo ) {\r\n      return todo.get('completed');\r\n    });\r\n  },\r\n\r\n  // Фильтрация незавершенных задач списка.\r\n  remaining: function() {\r\n    return this.without.apply( this, this.completed() );\r\n  },\r\n\r\n  nextOrder: function() {\r\n    if ( !this.length ) {\r\n      return 1;\r\n    }\r\n    return this.last().get('order') + 1;\r\n  },\r\n\r\n  comparator: function( todo ) {\r\n    return todo.get('order');\r\n  }\r\n});\r\n\r\nvar Todos = new collection();\r\nexport default Todos; // (?)","class TodoFilter {\r\n  constructor() {\r\n    this.filter = '';\r\n  }\r\n  set(filter) {\r\n    this.filter = filter;\r\n  }\r\n  get() {\r\n    return this.filter;\r\n  }\r\n}\r\n\r\nvar filter = new TodoFilter();\r\nexport default filter;","const ENTER_KEY = 13;\r\n\r\nexport function isEnterKey(code) {\r\n  if (code === ENTER_KEY) {\r\n    return true;\r\n  }\r\n  return false;\r\n}","export default Backbone.Model.extend({\r\n  defaults: {\r\n    title: '',\r\n    completed: false\r\n  },\r\n  // переключение состояния задачи `completed`.\r\n  toggle: function() {\r\n    this.save({\r\n      completed: !this.get('completed')\r\n    });\r\n  }\r\n});","import TodoFilter from './../filters/todo';\r\nimport Todos from './../collections/todos';\r\n\r\nvar Workspace = Backbone.Router.extend({\r\n  routes:{\r\n    '*filter': 'setFilter'\r\n  },\r\n  setFilter: function( param ) {\r\n\r\n    console.log('Set filter: ' + param);\r\n    TodoFilter.set(param || '');\r\n\r\n    // задание текущего фильтра\r\n    // генерация события filter коллекции, вызывающего\r\n    // скрытие/отображение задач\r\n    Todos.trigger('filter');\r\n  }\r\n});\r\n\r\nvar TodoRouter = new Workspace();\r\nBackbone.history.start();\r\n\r\nexport default TodoRouter;\r\n","import {isEnterKey} from './../helpers/utils';\r\nimport TodoFilter from './../filters/todo';\r\nimport TodoView from './todos';\r\nimport Todos from './../collections/todos';\r\n\r\nexport default Backbone.View.extend({\r\n  el: '#todoapp',\r\n  statsTemplate: _.template( $('#stats-template').html() ),\r\n  events: {\r\n    'keypress #new-todo': 'createOnEnter',\r\n    'click #clear-completed': 'clearCompleted',\r\n    'click #toggle-all': 'toggleAllComplete'\r\n  },\r\n  // при инициализации мы делаем привязку к соответствующим \r\n  // событиям коллекции `Todos` при добавлении и изменении событий.\r\n  initialize: function() {\r\n    this.allCheckbox = this.$('#toggle-all')[0];\r\n    this.$input = this.$('#new-todo');\r\n    this.$footer = this.$('#footer');\r\n    this.$main = this.$('#main');\r\n    this.listenTo(Todos, 'add', this.addOne);\r\n    this.listenTo(Todos, 'reset', this.addAll);\r\n    this.listenTo(Todos, 'change:completed', this.filterOne);\r\n    this.listenTo(Todos,'filter', this.filterAll);\r\n    this.listenTo(Todos, 'all', this.render);\r\n    Todos.fetch();\r\n  },\r\n  render: function() {\r\n    var completed = Todos.completed().length;\r\n    var remaining = Todos.remaining().length;\r\n    if ( Todos.length ) {\r\n      this.$main.show();\r\n      this.$footer.show();\r\n      this.$footer.html(this.statsTemplate({\r\n        completed: completed,\r\n        remaining: remaining\r\n      }));\r\n\r\n      console.log('view render: ' + TodoFilter.get());\r\n\r\n      this.$('#filters li a')\r\n        .removeClass('selected')\r\n        .filter('[href=\"#/' + ( TodoFilter.get() || '' ) + '\"]')\r\n        .addClass('selected');\r\n    } else {\r\n      this.$main.hide();\r\n      this.$footer.hide();\r\n    }\r\n    this.allCheckbox.checked = !remaining;\r\n  },\r\n\r\n  // Добавление в список единственной задачи путем создания\r\n  // представления для нее и добавления ее элемента в `<ul>`.\r\n  addOne: function( todo ) {\r\n    var view = new TodoView({ model: todo });\r\n    $('#todo-list').append( view.render().el );\r\n  },\r\n  // Одновременное добавление всех элементов в коллекцию Todos.\r\n  addAll: function() {\r\n    this.$('#todo-list').html('');\r\n    Todos.each(this.addOne, this);\r\n  },\r\n\r\n  filterOne : function (todo) {\r\n    todo.trigger('visible');\r\n  },\r\n  filterAll : function () {\r\n    Todos.each(this.filterOne, this);\r\n  },\r\n\r\n  newAttributes: function() {\r\n    return {\r\n      title: this.$input.val().trim(),\r\n      order: Todos.nextOrder(),\r\n      completed: false\r\n    };\r\n  },\r\n\r\n  // Создание новой задачи и ее сохранение в локальном хранилище\r\n  createOnEnter: function( event ) {\r\n    if ( !isEnterKey(event.which) || !this.$input.val().trim() ) {\r\n      return;\r\n    }\r\n    Todos.create( this.newAttributes() );\r\n    this.$input.val('');\r\n  },\r\n\r\n  // Удаление всех завершенных задач уничтожением их моделей.\r\n  clearCompleted: function() {\r\n    _.invoke(Todos.completed(), 'destroy');\r\n    return false;\r\n  },\r\n\r\n  toggleAllComplete: function() {\r\n    var completed = this.allCheckbox.checked;\r\n    Todos.each(function( todo ) {\r\n      todo.save({\r\n        'completed': completed\r\n      });\r\n    });\r\n  }\r\n});","import {isEnterKey} from './../helpers/utils';\r\nimport TodoFilter from './../filters/todo';\r\n\r\nexport default Backbone.View.extend({\r\n  tagName: 'li',\r\n  template: _.template( $('#item-template').html() ),\r\n  events: {\r\n    'click .toggle': 'togglecompleted',\r\n    'dblclick label': 'edit',\r\n    'click .destroy': 'clear',\r\n    'keypress .edit': 'updateOnEnter',\r\n    'blur .edit': 'close'\r\n  },\r\n  // представление TodoView прослушивает изменения своей модели\r\n  // и выполняет повторное отображение. Поскольку в этом приложении\r\n  // **Todo** и **TodoView** соотносятся как 1 к 1,\r\n  // для удобства мы устанавливаем прямую ссылку на модель.\r\n  initialize: function() {\r\n    this.listenTo(this.model, 'change', this.render);\r\n    this.listenTo(this.model, 'destroy', this.remove);\r\n    this.listenTo(this.model, 'visible', this.toggleVisible);\r\n  },\r\n  // Повторно отображает заголовки задачи.\r\n  render: function() {\r\n    this.$el.html( this.template( this.model.toJSON() ) );\r\n    this.$el.toggleClass( 'completed', this.model.get('completed') );\r\n    this.toggleVisible();\r\n    this.$input = this.$('.edit');\r\n    return this;\r\n  },\r\n\r\n  toggleVisible : function () {\r\n    this.$el.toggleClass( 'hidden', this.isHidden());\r\n  },\r\n  isHidden : function () {\r\n    console.log('Is hidden: ' + TodoFilter.get());\r\n    var isCompleted = this.model.get('completed');\r\n    return (!isCompleted && TodoFilter.get() === 'completed') || \r\n      (isCompleted && TodoFilter.get() === 'active');\r\n  },\r\n  togglecompleted: function() {\r\n    this.model.toggle();\r\n  },\r\n\r\n  // Переключение этого представления в режим редактирования,\r\n  // отображение поля ввода.\r\n  edit: function() {\r\n    this.$el.addClass('editing');\r\n    this.$input.focus();\r\n  },\r\n  // Закрытие режима редактирования, сохранение изменений в задаче.\r\n  close: function() {\r\n    var value = this.$input.val().trim();\r\n    if ( value ) {\r\n      this.model.save({ title: value });\r\n    } else {\r\n      this.clear();\r\n    }\r\n    this.$el.removeClass('editing');\r\n  },\r\n  // Если вы нажмете `enter`, то редактирование элемента завершится.\r\n  updateOnEnter: function( e ) {\r\n    if ( isEnterKey(e.which) ) {\r\n      this.close();\r\n    }\r\n  },\r\n  clear: function() {\r\n    this.model.destroy();\r\n  }\r\n});"],"sourceRoot":"/source/"}